diff --git net/base/load_flags_list.h net/base/load_flags_list.h
index 4fc3870bcfbc8..24c6d32d4a8d8 100644
--- net/base/load_flags_list.h
+++ net/base/load_flags_list.h
@@ -110,3 +110,6 @@ LOAD_FLAG(CAN_USE_SHARED_DICTIONARY, 1 << 17)
 // Indicates that CAN_USE_SHARED_DICTIONARY must be disabled after a redirect to
 // another origin.
 LOAD_FLAG(DISABLE_SHARED_DICTIONARY_AFTER_CROSS_ORIGIN_REDIRECT, 1 << 18)
+
+// This load will not send any cookies. For CEF usage.
+LOAD_FLAG(DO_NOT_SEND_COOKIES, 1 << 19)
diff --git net/url_request/url_request_http_job.cc net/url_request/url_request_http_job.cc
index 43e03be287f2a..e969f58ed80a2 100644
--- net/url_request/url_request_http_job.cc
+++ net/url_request/url_request_http_job.cc
@@ -1768,7 +1768,8 @@ bool URLRequestHttpJob::ShouldAddCookieHeader() const {
   // Read cookies whenever allow_credentials() is true, even if the PrivacyMode
   // is being overridden by NetworkDelegate and will eventually block them, as
   // blocked cookies still need to be logged in that case.
-  return request_->context()->cookie_store() && request_->allow_credentials();
+  return request_->context()->cookie_store() && request_->allow_credentials() &&
+         !(request_info_.load_flags & LOAD_DO_NOT_SEND_COOKIES);
 }
 
 bool URLRequestHttpJob::IsPartitionedCookiesEnabled() const {
diff --git services/network/public/cpp/resource_request.cc services/network/public/cpp/resource_request.cc
index d5239af9a83d4..70a2cb7728125 100644
--- services/network/public/cpp/resource_request.cc
+++ services/network/public/cpp/resource_request.cc
@@ -310,7 +310,8 @@ bool ResourceRequest::EqualsForTesting(const ResourceRequest& request) const {
 }
 
 bool ResourceRequest::SendsCookies() const {
-  return credentials_mode == network::mojom::CredentialsMode::kInclude;
+  return credentials_mode == network::mojom::CredentialsMode::kInclude &&
+         !(load_flags & net::LOAD_DO_NOT_SEND_COOKIES);
 }
 
 bool ResourceRequest::SavesCookies() const {
