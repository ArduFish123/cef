diff --git chrome/browser/printing/printer_query.cc chrome/browser/printing/printer_query.cc
index 53e3de608b677..37e7afb5d1b37 100644
--- chrome/browser/printing/printer_query.cc
+++ chrome/browser/printing/printer_query.cc
@@ -120,6 +120,7 @@ PrinterQuery::PrinterQuery(content::GlobalRenderFrameHostId rfh_id)
       rfh_id_(rfh_id),
       cookie_(PrintSettings::NewCookie()) {
   DCHECK_CURRENTLY_ON(content::BrowserThread::UI);
+  printing_context_->set_render_ids(rfh_id.child_id, rfh_id.frame_routing_id);
 }
 
 PrinterQuery::~PrinterQuery() {
diff --git printing/printing_context.h printing/printing_context.h
index 7582c73418e74..f5b477c18c65a 100644
--- printing/printing_context.h
+++ printing/printing_context.h
@@ -173,6 +173,13 @@ class COMPONENT_EXPORT(PRINTING) PrintingContext {
 
   int job_id() const { return job_id_; }
 
+  void set_render_ids(int render_process_id, int render_frame_id) {
+    render_process_id_ = render_process_id;
+    render_frame_id_ = render_frame_id;
+  }
+  int render_process_id() const { return render_process_id_; }
+  int render_frame_id() const { return render_frame_id_; }
+
  protected:
   explicit PrintingContext(Delegate* delegate);
 
@@ -219,6 +226,10 @@ class COMPONENT_EXPORT(PRINTING) PrintingContext {
   // The job id for the current job. The value is 0 if no jobs are active.
   int job_id_;
 
+  // Routing IDs for the frame that owns this object.
+  int render_process_id_ = 0;
+  int render_frame_id_ = 0;
+
  private:
 #if BUILDFLAG(ENABLE_OOP_PRINTING)
   // If this instance of PrintingContext should skip making any system calls
